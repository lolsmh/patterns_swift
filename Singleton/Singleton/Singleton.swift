import Foundation

/*
 Если во время исполнения асинхронной программы оба потока в один момент времени
 обратятся в первый раз к instance, возможно создание нескольких экземпляров, поэтому
 необходимо учитывать многопоточность.
 */
class Singleton {
    // Глобальная точка доступа к единственному экземпляру класса
    public static var instance: Singleton = Singleton()
    
    private init() {
        // Любая логика подготовки синглетона
    }
}

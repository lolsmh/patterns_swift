import Foundation

/*
 Компонент может иметь ссылку на родителя
 Должен быть в идеале представлен интерфейсом, но
 из-за особенностей языка реализовал через класс
 Так что сделайте вид что это интерфейс
 */

class Food: Equatable {
    
    // Именно из-за этой переменной лучше делать компонент
    // интерфейсом, потому что в дальшейшем делать ее override
    // просто не удобно и даже не нужно. А интерфейс, напротив,
    // гарантирует ее наличие, и не дрочит override-ом
    
    var cost: Double = 0
    
    // Если функция не будет перегружена в наследниках
    // то компилятор начнет искать его в родителе
    // и напорется на ошибку
    func getCost() throws -> Double {
        throw InheritanceError.NotImplemented()
    }
    
    // Нужно для сравнения элементов
    var id: String = UUID().uuidString
    
    // Перегрузка оператора сравнения
    static func == (lhs: Food, rhs: Food) -> Bool {
        lhs.id == rhs.id
    }
}
